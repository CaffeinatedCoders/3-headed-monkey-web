<% url = ThreeHeadedMonkeyWeb::Application.routes.url_helpers %>

@markers = new L.FeatureGroup()
@paths = new L.FeatureGroup()

$ ->
    L.Icon.Default.imagePath = "/assets/leaflet"
    @map = L.map('map').setView([47.0736333,15.4366147], 13)
    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(@map)
    @map.addLayer(markers)
    @map.addLayer(paths)
    L.control.layers(null, {"Marker":markers, "Paths":paths}).addTo(@map)


@update_locations_for_device = (device_id) ->
  return if device_id.length == 0
  location_path = "<%= CGI.unescape url.location_history_path('{device_id}') %>".replace("{device_id}", device_id);
  $.ajax
    url: location_path
    dataType: "json"
    error: (jqXHR, textStatus, errorThrown) ->
      alert("Error: " + textStatus)
    success: (data, textStatus, jqXHR) ->
      draw_locations_on_map(data)
      latlongs = data.map (location) ->
        L.latLng location.latitude, location.longitude
      draw_path_on_map(latlongs)


draw_locations_on_map = (locations) ->
    markers.clearLayers()
    add_marker_for_location location for location in locations

add_marker_for_location = (location) ->
    marker = L.marker([location.latitude, location.longitude])
    marker.bindPopup("" + location["time"])
    markers.addLayer(marker)

draw_path_on_map = (latlongs) ->
    paths.clearLayers()
    path = L.polyline(latlongs, {color: 'red'})
    paths.addLayer(path)